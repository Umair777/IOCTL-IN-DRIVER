head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2018.04.03.07.00.46;	author anmolzehra;	state Exp;
branches;
next	1.10;

1.10
date	2018.04.03.06.28.45;	author anmolzehra;	state Exp;
branches;
next	1.9;

1.9
date	2018.04.03.06.15.01;	author anmolzehra;	state Exp;
branches;
next	1.8;

1.8
date	2018.04.03.06.07.59;	author anmolzehra;	state Exp;
branches;
next	1.7;

1.7
date	2018.04.03.03.17.11;	author anmolzehra;	state Exp;
branches;
next	1.6;

1.6
date	2018.04.03.03.14.14;	author anmolzehra;	state Exp;
branches;
next	1.5;

1.5
date	2018.04.03.03.13.23;	author anmolzehra;	state Exp;
branches;
next	1.4;

1.4
date	2018.04.03.03.04.25;	author anmolzehra;	state Exp;
branches;
next	1.3;

1.3
date	2018.03.30.07.03.23;	author anmolzehra;	state Exp;
branches;
next	1.2;

1.2
date	2018.03.30.06.57.27;	author anmolzehra;	state Exp;
branches;
next	1.1;

1.1
date	2018.03.30.06.25.50;	author anmolzehra;	state Exp;
branches;
next	;


desc
@@


1.11
log
@*** empty log message ***
@
text
@#include"header.h"
#include"declarations.h"
#include"ioctl.h"
long ioctl_dev(struct file *filep,unsigned int cmd,unsigned long arg)
{
	Dev *ldev;
	//	Qset *lqset;
	//	size_t lsize;
	//	loff_t offset;
	int ret;
#ifdef DEBUG
	printk(KERN_ALERT "Ioctldev Begins\n");
#endif
	ldev=filep->private_data;	
	if(!ldev)
	{
#ifdef DEBUG
		printk(KERN_INFO "ldev failed\n");
#endif
	}
	switch(cmd)
	{
		case GETREGSIZE:
			ret=put_user(ldev->regsize,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case GETNOOFREG:
			ret=put_user(ldev->noofreg,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case GETDEVICESIZE:
			ret=put_user(ldev->devsize,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case GETDATASIZE:
			ret=put_user(ldev->datasize,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case SETREGSIZE:
			ret=get_user(ldev->regsize,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case SETNOOFREG:
			ret=get_user(ldev->noofreg,(int __user *)arg);
			if(ret < 0)
			{
#ifdef DEBUG
				printk(KERN_ERR "Couldn't give appropriate value to user\n");
#endif
				goto OUT;
			}
			break;
		case DEVRESET:
	//		if(access_ok(VERIFY_WRITE,ldev,sizeof(Dev)))
	//		{
				ldev->noofreg=noofreg=16;
				ldev->regsize=regsize=8;
				ldev->devsize=devsize=128;
				ldev->datasize=datasize=0;
	//		}
			break;
		default:
			printk(KERN_ALERT "Wrong choice\n");
			goto OUT;
	}

#ifdef DEBUG
	printk(KERN_ALERT "Ioctldev Ends\n");
#endif
	return 0;
OUT:
#ifdef DEBUG
	printk(KERN_ERR "Error occured\n");
#endif
	return -1;
}
@


1.10
log
@*** empty log message ***
@
text
@d63 20
@


1.9
log
@*** empty log message ***
@
text
@d33 30
d64 2
a65 2
//			if(access_ok(VERIFY_WRITE,ldev,sizeof(Dev)))
//			{
d70 1
a70 1
//			}
@


1.8
log
@removed struct in access_ok
@
text
@d34 2
a35 2
			if(access_ok(VERIFY_WRITE,ldev,sizeof(Dev)))
			{
d40 1
a40 1
			}
@


1.7
log
@*** empty log message ***
@
text
@d34 2
a35 2
	//		if(access_ok(VERIFY_WRITE,ldev,sizeof(struct Dev)))
	//		{
d40 1
a40 1
	//		}
@


1.6
log
@*** empty log message ***
@
text
@d34 2
a35 2
			if(access_ok(VERIFY_WRITE,ldev,sizeof(struct *Dev)))
			{
d40 1
a40 1
			}
@


1.5
log
@*** empty log message ***
@
text
@d34 1
a34 1
			if(access_OK(VERIFY_WRITE,ldev,sizeof(struct Dev)))
@


1.4
log
@new entry for getregsize
@
text
@d34 1
a34 1
			if(access_ok(VERIFY_WRITE,ldev,sizeof(struct Dev)))
@


1.3
log
@*** empty log message ***
@
text
@d7 4
a10 3
//	Qset *lqset;
//	size_t lsize;
//	loff_t offset;
d23 22
a44 3
	case DEVRESET:
		ldev->noofreg=noofreg=16;
		ldev->regsize=regsize=8;
d46 1
a46 1
		
d51 5
@


1.2
log
@*** empty log message ***
@
text
@d23 2
a24 2
		ldev->noofreg=16;
		ldev->regsize=8;
@


1.1
log
@Initial revision
@
text
@d3 1
d20 7
@
